<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.nifty-gui</groupId>
  <artifactId>nifty-main</artifactId>
  <packaging>pom</packaging>
  <version>1.5.0-SNAPSHOT</version>
  <name>Nifty Main Parent Project</name>
  <modules>
    <module>nifty-core</module>
    <module>nifty-controls</module>
    <module>nifty-controls-style-black</module>
    <module>nifty-renderer-java2d</module>
    <module>nifty-renderer-jogl</module>
    <module>nifty-renderer-libgdx</module>
    <module>nifty-renderer-lwjgl</module>
    <module>nifty-renderer-lwjgl3</module>
    <module>nifty-renderer-slick2d</module>
    <module>nifty-soundsystem-openal</module>
    <module>nifty-soundsystem-pauls-sound</module>
    <module>nifty-html</module>
    <module>nifty-examples</module>
    <module>nifty-examples-jogl</module>
    <module>nifty-examples-libgdx</module>
    <module>nifty-examples-lwjgl</module>
    <module>nifty-examples-lwjgl3</module>
    <!--
     Could not find artifact javax.jnlp:jnlp-api:jar:5.0 at specified
     path /Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home/lib/javaws.jar

     Until Slick2D can be used with jdk 11 we have to drop support for now
     since I couldn't come up with a workaround for the missing Webstart dependency :(

    <module>nifty-examples-slick2d</module>
    -->
    <module>nifty-renderer-processing</module>
    <module>nifty-soundsystem-minim</module>
    <module>nifty-examples-processing</module>
  </modules>
  <url>https://github.com/nifty-gui/nifty-gui</url>
  <description>Nifty GUI is a Java Library that supports the building of interactive user interfaces for games or similar applications. It utilizes OpenGL for rendering and it can be easily integrated into many rendering systems. The configuration of the GUI is stored in xml files with little supporting Java code. In short Nifty helps you to layout stuff, display it in a cool way and interact with it :)</description>
  <licenses>
    <license>
      <name>The BSD 2-Clause License</name>
      <url>http://www.opensource.org/licenses/bsd-license.php</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>void256</id>
      <name>void</name>
      <email>void@lessvoid.com</email>
      <url>https://github.com/void256</url>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  </properties>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.0.1</version>
          <configuration>
            <additionalparam>-Xdoclint:none</additionalparam>
            <links>
              <link>http://java.sun.com/j2se/1.5.0/docs/api</link>
              <link>http://docs.oracle.com/javase/6/docs/api/</link>
            </links>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.wagon</groupId>
              <artifactId>wagon-ssh</artifactId>
              <version>2.0</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>com.googlecode.mavennatives</groupId>
          <artifactId>maven-nativedependencies-plugin</artifactId>
          <version>0.0.7</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M2</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6.0</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5.3</version>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>1.0-beta-7</version>
      </extension>
    </extensions>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>4.0.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <scm>
    <connection>scm:git:git://github.com/nifty-gui/nifty-gui.git</connection>
    <developerConnection>scm:git:git@github.com:nifty-gui/nifty-gui.git</developerConnection>
    <url>scm:git:https://github.com/nifty-gui/nifty-gui.git</url>
    <tag>HEAD</tag>
  </scm>
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <site>
      <id>nifty.sourceforge.net</id>
      <url>scp://shell.sourceforge.net/home/project-web/nifty-gui/htdocs/projects/${project.version}/nifty</url>
    </site>
  </distributionManagement>
  <repositories>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </repository>
  </repositories>
  <profiles>
    <!-- profile for release signing all artifacts -->
    <!--
          remember the following steps for a hopefully successful release:
          a) ssh -t void256,nifty-gui@shell.sourceforge.net create
          b) exit shell / remote shell should still be available
          c) mvn site:site site:deploy    # just to make sure everything runs smoothly with the site plugin
          d) mvn javadoc:jar              # just to make sure everything runs smoothly with the javadoc plugin
          e) git pull origin 1.4          # just to make sure we're updated since the release plugin will git push stuff
          f) mvn clean release:prepare
          g) mvn release:perform -Darguments="-Dpgp.secretkey=keyfile:nifty-gui-private.asc -Dpgp.passphrase=literal:PASSWORD"
    -->
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.kohsuke</groupId>
            <artifactId>pgp-maven-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
