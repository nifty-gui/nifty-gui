<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>nifty-main</artifactId>
        <groupId>com.github.nifty-gui</groupId>
        <version>1.4.3-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>
    <artifactId>nifty-examples-slick2d</artifactId>
    <name>Nifty Examples for Slick2D</name>
    <description>Nifty Examples for Slick2D</description>
    <properties>
        <!-- default for command line, overwritten by Netbeans -->
        <exec.args>-jar ${basedir}/target/${project.artifactId}-${project.version}.jar</exec.args>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.github.nifty-gui</groupId>
            <artifactId>nifty</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.nifty-gui</groupId>
            <artifactId>nifty-examples</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.nifty-gui</groupId>
            <artifactId>nifty-style-black</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.nifty-gui</groupId>
            <artifactId>nifty-default-controls</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.nifty-gui</groupId>
            <artifactId>nifty-slick2d-renderer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>org.jcraft</groupId>
          <artifactId>jorbis</artifactId>
          <version>0.0.17</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.mavennatives</groupId>
                <artifactId>maven-nativedependencies-plugin</artifactId>
                <version>0.0.5</version>
                <executions>
                    <!--
                      If you use this pom.xml with eclipse m2e plugin you'll need to install the
                      maven natives eclipse plugin from http://code.google.com/p/mavennatives/
                      to make the error message go away. It's as simple as installing it using
                      the following update site: http://mavennatives.googlecode.com/svn/eclipse-update/.

                      This plugin detects if you have the maven plugin configured, and if you do
                      it executes the unpacking of natives, and configures the Native Library Location.

                     This will allow you to run the examples from within eclipse without any more
                     setup of LWJGL required! Just execute the individual examples like any other
                     Java application from eclipse. Done! :)
                    -->
                    <execution>
                        <id>unpacknatives</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- to make the example run via "mvn exec:exec", we need to put the potentially too long classpath into
                a manifest: -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>            
            <plugin> 
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>de.lessvoid.nifty.examples.slick2d.all.AllDemoMain</mainClass>
                            <classpathPrefix>dependency/</classpathPrefix>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <customClasspathLayout>${artifact.artifactId}-${artifact.version}${dashClassifier?}.${artifact.extension}</customClasspathLayout>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            
            <!-- use "mvn exec:exec" to run the example -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>  
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>  
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <executable>java</executable>
                            <!-- this way it works with netbeans "run file" out of the box: -->
                            <commandlineArgs>-Djava.library.path=${basedir}/target/natives ${exec.args}</commandlineArgs>
                        </configuration>  
                    </execution>  
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
